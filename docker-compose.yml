# docker-compose.yml
# Defines the multi-container application environment for local development.
# This file is NOT used by Koyeb for deployment.

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose port for local tools like pgAdmin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379" # Expose port for local debugging if needed
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # Override POSTGRES_SERVER from .env to use the Docker service name
      POSTGRES_SERVER: db
      REDIS_URL: redis://redis:6379/0
      ENV_STATE: dev # Specify environment to ensure config loads .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "alembic upgrade head && 
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: db
      REDIS_URL: redis://redis:6379/0
      ENV_STATE: dev
      # For Windows compatibility in local dev, we might need a simple worker.
      # However, the container runs on Linux, so the default worker is fine.
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    # Use the environment variable for the Redis URL to keep it DRY
    command: sh -c "rq worker --url $$REDIS_URL default"

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local